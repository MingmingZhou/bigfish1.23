<?xml version="1.0" encoding="UTF-8" ?>

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">
         
    <simple-method method-name="updateCustomerPersonalInfo" short-description="Update Customer Personal Information" login-required="true">
        <if-empty field="parameters.partyId"><add-error><fail-message message="No partyId passed, cannot Update Customer"/></add-error></if-empty>
        <entity-one entity-name="PartyAttribute" value-field="partyAttributeValue">
            <field-map field-name="attrName" value="PARTY_TEXT_PREFERENCE"/>
            <field-map field-name="partyId" from-field="parameters.partyId"/>
        </entity-one>
        <if-compare operator="equals" value="Y" field="partyAttributeValue.attrValue">
        	<set field="parameters.PHONE_MOBILE_MANDATORY" value="Y" />
        </if-compare>
        <call-simple-method method-name="PersonalInfoValidation" xml-resource="component://osafe/script/Validation/ValidationEvents.xml"/>
         <check-errors/>
         <call-simple-method method-name="createUpdatePartyAttributes"/>
        <!-- Create person map -->
        <call-map-processor in-map-name="parameters" out-map-name="personMap">
            <simple-map-processor name="newPerson">
                <process field="personalTitle"><copy/></process>
                <process field="USER_FIRST_NAME">
                    <copy to-field="firstName"/>
                </process>
                <process field="USER_MIDDLE_NAME"><copy to-field="middleName"/></process>
                <process field="USER_LAST_NAME">
                    <copy to-field="lastName"/>
                </process>
                <!--  process field="USER_GENDER"><copy to-field="gender"/></process>-->
            </simple-map-processor>
        </call-map-processor>
        <!-- update person service -->
        <set from-field="parameters.partyId" field="personMap.partyId"/>
        <call-service service-name="updatePerson" in-map-name="personMap"></call-service>

        <!-- update phone contact -->
        <!-- home phone -->
        <if-not-empty field="parameters.homePhoneContactMechId">
            <set field="homePhoneContext.contactMechId" from-field="parameters.homePhoneContactMechId"/>
            <if-not-empty field="homePhoneContext.contactNumber">
			    <call-service service-name="updatePartyTelecomNumber" in-map-name="homePhoneContext">
                    <result-to-field result-name="contactMechId" field="homePhoneContext.contactMechId"/>
                </call-service>
			<else>
			    <call-service service-name="deletePartyContactMech" in-map-name="homePhoneContext"/>
			</else>
			</if-not-empty>
        <else>
            <call-service service-name="createPartyTelecomNumber" in-map-name="homePhoneContext">
                <result-to-field result-name="contactMechId" field="homePhoneContext.contactMechId"/>
            </call-service>
            <set from-field="userLogin.partyId" field="homePhonePurposeContext.partyId"/>
            <set from-field="homePhoneContext.contactMechId" field="homePhonePurposeContext.contactMechId"/>
            
            <set value="PHONE_HOME" field="homePhonePurposeContext.contactMechPurposeTypeId"/>
            <call-service service-name="createPartyContactMechPurpose" in-map-name="homePhonePurposeContext"/>
            <set value="PRIMARY_PHONE" field="homePhonePurposeContext.contactMechPurposeTypeId"/>
            <call-service service-name="createPartyContactMechPurpose" in-map-name="homePhonePurposeContext"/>
        </else>
        </if-not-empty>
            
        <!-- work phone -->
        <if-not-empty field="parameters.workPhoneContactMechId">
            <set field="workPhoneContext.contactMechId" from-field="parameters.workPhoneContactMechId"/>
            <if-not-empty field="workPhoneContext.contactNumber">
                <call-service service-name="updatePartyTelecomNumber" in-map-name="workPhoneContext">
                    <result-to-field result-name="contactMechId" field="workPhoneContext.contactMechId"/>
                </call-service>
            <else>
                <call-service service-name="deletePartyContactMech" in-map-name="workPhoneContext"/>
            </else>
            </if-not-empty>
            <else>
                <if-not-empty field="workPhoneContext.contactNumber">
                    <call-service service-name="createPartyTelecomNumber" in-map-name="workPhoneContext">
                        <result-to-field result-name="contactMechId" field="workPhoneContext.contactMechId"/>
                    </call-service>
                    <set from-field="userLogin.partyId" field="homePhonePurposeContext.partyId"/>
                    <set from-field="workPhoneContext.contactMechId" field="workPhonePurposeContext.contactMechId"/>

                    <set value="PHONE_WORK" field="workPhonePurposeContext.contactMechPurposeTypeId"/>
                    <call-service service-name="createPartyContactMechPurpose" in-map-name="workPhonePurposeContext"/>
                </if-not-empty>
            </else>
        </if-not-empty>

        <!-- mobile phone -->
        <if-not-empty field="parameters.mobilePhoneContactMechId">
            <set field="mobilePhoneContext.contactMechId" from-field="parameters.mobilePhoneContactMechId"/>
            <if-not-empty field="mobilePhoneContext.contactNumber">
                <call-service service-name="updatePartyTelecomNumber" in-map-name="mobilePhoneContext">
                    <result-to-field result-name="contactMechId" field="mobilePhoneContext.contactMechId"/>
                </call-service>
            <else>
                <call-service service-name="deletePartyContactMech" in-map-name="mobilePhoneContext"/>
            </else>
            </if-not-empty>
        <else>
            <if-not-empty field="mobilePhoneContext.contactNumber">
                <call-service service-name="createPartyTelecomNumber" in-map-name="mobilePhoneContext">
                    <result-to-field result-name="contactMechId" field="mobilePhoneContext.contactMechId"/>
                </call-service>
                <set from-field="userLogin.partyId" field="mobilePhonePurposeContext.partyId"/>
                <set from-field="mobilePhoneContext.contactMechId" field="mobilePhonePurposeContext.contactMechId"/>
                <set value="PHONE_MOBILE" field="mobilePhonePurposeContext.contactMechPurposeTypeId"/>
                <call-service service-name="createPartyContactMechPurpose" in-map-name="mobilePhonePurposeContext"/>
            </if-not-empty>
        </else>
        </if-not-empty>
        
        <if-not-empty field="parameters.emailAddressContactMechId">
            <entity-one value-field="contactMech" entity-name="ContactMech">
                <field-map field-name="contactMechId" from-field="parameters.emailAddressContactMechId"/>
            </entity-one>
            
            <set field="emailAddressContext.partyId" from-field="parameters.partyId"/>
            <set field="emailAddressContext.contactMechId" from-field="parameters.emailAddressContactMechId"/>
            <set field="emailAddressContext.emailAddress" from-field="contactMech.infoString"/>
            <if-not-empty field="parameters.CUSTOMER_EMAIL_ALLOW_SOL">
               <set field="emailAddressContext.allowSolicitation" from-field="parameters.CUSTOMER_EMAIL_ALLOW_SOL"/>
            <else>
               <set field="emailAddressContext.allowSolicitation" value="N"/>
            </else>
            </if-not-empty>
            <call-service service-name="updatePartyEmailAddress" in-map-name="emailAddressContext"></call-service>
        </if-not-empty>
        
        <if-not-empty field="parameters.PARTY_EMAIL_PREFERENCE">
            <entity-one value-field="partyAttributeExists" entity-name="PartyAttribute">
                <field-map field-name="attrName" value="PARTY_EMAIL_PREFERENCE"/>
                <field-map field-name="partyId" from-field="parameters.partyId"/>
            </entity-one>
            
            <make-value entity-name="PartyAttribute" value-field="partyAttribute"/>
            <set from-field="parameters.partyId" field="partyAttribute.partyId"/>
            <set value="PARTY_EMAIL_PREFERENCE" field="partyAttribute.attrName"/>
            <set from-field="parameters.PARTY_EMAIL_PREFERENCE" field="partyAttribute.attrValue"/>
            <if-not-empty field="partyAttributeExists">
                <store-value value-field="partyAttribute"/>
            <else>
                <create-value value-field="partyAttribute"/>
            </else>
            </if-not-empty>
        </if-not-empty>
        
        <if-not-empty field="parameters.PARTY_TEXT_PREFERENCE">
            <entity-one value-field="partyAttributeExists" entity-name="PartyAttribute">
                <field-map field-name="attrName" value="PARTY_TEXT_PREFERENCE"/>
                <field-map field-name="partyId" from-field="parameters.partyId"/>
            </entity-one>
            
            <make-value entity-name="PartyAttribute" value-field="partyAttribute"/>
            <set from-field="parameters.partyId" field="partyAttribute.partyId"/>
            <set value="PARTY_TEXT_PREFERENCE" field="partyAttribute.attrName"/>
            <set from-field="parameters.PARTY_TEXT_PREFERENCE" field="partyAttribute.attrValue"/>
            <if-not-empty field="partyAttributeExists">
                <store-value value-field="partyAttribute"/>
            <else>
                <create-value value-field="partyAttribute"/>
            </else>
            </if-not-empty>
        </if-not-empty>
        
        <property-to-field field="tempSuccessMessage" resource="OSafeUiLabels" property="UserProfileUpdatedSuccess"/>
        <string-to-list string="${tempSuccessMessage}"  list="success_list"/>
        <field-to-request field="success_list" request-name="osafeSuccessMessageList" />
    </simple-method>
    
    <simple-method method-name="updateCustomerEmail" short-description="Update Customer Email Information" login-required="true">
        <if-empty field="parameters.partyId"><add-error><fail-message message="No partyId passed, cannot Update Customer"/></add-error></if-empty>
        
        <call-simple-method method-name="validateEmailInfo" xml-resource="component://osafe/script/Validation/UserProfile.xml" />
        <check-errors/>
        
        <!-- Update user's email address -->
        <if-not-empty field="parameters.emailAddressContactMechId">
            <set field="emailAddressContext.partyId" from-field="parameters.partyId"/>
            <set field="emailAddressContext.contactMechId" from-field="parameters.emailAddressContactMechId"/>
            <set field="emailAddressContext.emailAddress" from-field="parameters.CUSTOMER_EMAIL_NEW"/>
            <call-service service-name="updatePartyEmailAddress" in-map-name="emailAddressContext"></call-service>
        </if-not-empty>
        
        <set field="updateUserLoginIdCtx.userLoginId" from-field="parameters.CUSTOMER_EMAIL_NEW"/>
        <call-service service-name="updateUserLoginId" in-map-name="updateUserLoginIdCtx">
            <result-to-session result-name="newUserLogin" session-name="userLogin"/>
        </call-service>
        <field-to-session field="parameters.CUSTOMER_EMAIL_NEW" session-name="USER_LOGIN_EMAIL"/>
        
        <call-simple-method method-name="UserLoginUpdatedMessage" />
    </simple-method>
    
    <simple-method method-name="updateCustomerPassword" short-description="Update Customer Password Information" login-required="true">
        <if-empty field="parameters.partyId"><add-error><fail-message message="No partyId passed, cannot Update Customer"/></add-error></if-empty>
        
        <call-simple-method method-name="validatePasswordInfo" xml-resource="component://osafe/script/Validation/UserProfile.xml" />
        <check-errors/>
        
        <!-- Update user's passord  -->
        <property-to-field resource="security" property="username.lowercase" default="false" field="username_lowercase"/>
        <property-to-field resource="security" property="password.lowercase" default="false" field="password_lowercase"/>
        <!-- if username and/or password should be lowercased, do that now -->
        <if-compare field="username_lowercase" operator="equals" value="true">
            <call-object-method obj-field="parameters.USERNAME" method-name="toLowerCase" ret-field="parameters.USERNAME"/>
        </if-compare>
        <if-compare field="password_lowercase" operator="equals" value="true">
            <call-object-method obj-field="parameters.PASSWORD" method-name="toLowerCase" ret-field="parameters.PASSWORD"/>
            <call-object-method obj-field="parameters.CONFIRM_PASSWORD" method-name="toLowerCase" ret-field="parameters.CONFIRM_PASSWORD"/>
            <call-object-method obj-field="parameters.OLD_PASSWORD" method-name="toLowerCase" ret-field="parameters.OLD_PASSWORD"/>
        </if-compare>
        <if-not-empty field="parameters.PASSWORD">
            <call-map-processor in-map-name="parameters" out-map-name="updatePasswordContext">
                <simple-map-processor name="newPassword">
                    <process field="USERNAME"><copy to-field="userLoginId"/></process>
                    <process field="PASSWORD"><copy to-field="newPassword"/></process>
                    <process field="OLD_PASSWORD">
                        <copy to-field="currentPassword"/>
                    </process>
                    <process field="CONFIRM_PASSWORD">
                        <compare-field operator="equals" field="PASSWORD"><fail-property resource="OSafeUiLabels" property="PasswordMatchError"/></compare-field>
                        <!-- This is checked below in the checkNewPassword method in the bsh block: <not-empty><fail-message message="You must enter your password twice"/></not-empty> -->
                        <copy to-field="newPasswordVerify"/>
                    </process>
                </simple-map-processor>
            </call-map-processor>
           <call-service service-name="updatePassword" in-map-name="updatePasswordContext"></call-service>
        </if-not-empty>
        
        <call-simple-method method-name="UserLoginUpdatedMessage" />
    </simple-method>
    
    <simple-method method-name="createUpdatePartyAttributes" short-description="Update Party Attributes" login-required="false" >
            <!-- Create/Update USER Gender -->
        <set field="genderStr" value="USER_GENDER"/>
	    <call-object-method method-name="containsKey" obj-field="parameters" ret-field="hasGenderInput">
	        <field field="genderStr" type="Object"/>
	    </call-object-method>
        <if-compare field="hasGenderInput" operator="equals" value="true" type="Boolean">
            <set field="createUpdateGenderCtx.partyId" from-field="parameters.partyId"/>
            <set field="createUpdateGenderCtx.attrName" value="GENDER"/>
            <set field="createUpdateGenderCtx.attrValue" from-field="parameters.USER_GENDER" set-if-empty="true" set-if-null="true"/>
            <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateGenderCtx"/>
        </if-compare>
        
            <!-- Create/Update USER Title -->
        <set field="titleStr" value="USER_TITLE"/>
	    <call-object-method method-name="containsKey" obj-field="parameters" ret-field="hasTitleInput">
	        <field field="titleStr" type="Object"/>
	    </call-object-method>
	    <if-compare field="hasTitleInput" operator="equals" value="true" type="Boolean">
            <set field="createUpdateTitleCtx.partyId" from-field="parameters.partyId"/>
            <set field="createUpdateTitleCtx.attrName" value="TITLE"/>
            <set field="createUpdateTitleCtx.attrValue" from-field="parameters.USER_TITLE" set-if-empty="true" set-if-null="true"/>
            <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateTitleCtx"/>
        </if-compare>

        <set field="dobShortUkStr" value="dobShortMonthUk"/>
	    <call-object-method method-name="containsKey" obj-field="parameters" ret-field="hasDobShortUkInput">
	        <field field="dobShortUkStr" type="Object"/>
	    </call-object-method>
	    <if-compare field="hasDobShortUkInput" operator="equals" value="true" type="Boolean">
            <!-- Create/Update USER DOB (DDMM) -->
            <set field="createUpdateDOBShortCtx.partyId" from-field="parameters.partyId"/>
            <set field="createUpdateDOBShortCtx.attrName" value="DOB_DDMM"/>
            <set field="createUpdateDOBShortCtx.attrValue" from-field="DOB_DDMM" set-if-empty="true" set-if-null="true"/>
            <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateDOBShortCtx"/>
        </if-compare>
        
        <!-- Create/Update USER DOB (DDMMYYYY) -->
        <set field="dobLongUkStr" value="dobLongMonthUk"/>
	    <call-object-method method-name="containsKey" obj-field="parameters" ret-field="hasDobLongUkInput">
	        <field field="dobLongUkStr" type="Object"/>
	    </call-object-method>
	    <if-compare field="hasDobLongUkInput" operator="equals" value="true" type="Boolean">
            <set field="createUpdateDOBLongCtx.partyId" from-field="parameters.partyId"/>
            <set field="createUpdateDOBLongCtx.attrName" value="DOB_DDMMYYYY"/>
            <set field="createUpdateDOBLongCtx.attrValue" from-field="DOB_DDMMYYYY" set-if-empty="true" set-if-null="true"/>
            <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateDOBLongCtx"/>
        </if-compare>
        
        <set field="dobShortUsStr" value="dobShortMonthUs"/>
	    <call-object-method method-name="containsKey" obj-field="parameters" ret-field="hasDobShortUsInput">
	        <field field="dobShortUsStr" type="Object"/>
	    </call-object-method>
	    <if-compare field="hasDobShortUsInput" operator="equals" value="true" type="Boolean">
            <!-- Create/Update USER DOB (MMDD) -->
            <set field="createUpdateDOBShortCtx.partyId" from-field="parameters.partyId"/>
            <set field="createUpdateDOBShortCtx.attrName" value="DOB_MMDD"/>
            <set field="createUpdateDOBShortCtx.attrValue" from-field="DOB_MMDD" set-if-empty="true" set-if-null="true"/>
            <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateDOBShortCtx"/>
        </if-compare>
        
            <!-- Create/Update USER DOB (MMDDYYYY) -->
        <set field="dobLongUsStr" value="dobLongMonthUs"/>
	    <call-object-method method-name="containsKey" obj-field="parameters" ret-field="hasDobLongUsInput">
	        <field field="dobLongUsStr" type="Object"/>
	    </call-object-method>
	    <if-compare field="hasDobLongUsInput" operator="equals" value="true" type="Boolean">
            <set field="createUpdateDOBLongCtx.partyId" from-field="parameters.partyId"/>
            <set field="createUpdateDOBLongCtx.attrName" value="DOB_MMDDYYYY"/>
            <set field="createUpdateDOBLongCtx.attrValue" from-field="DOB_MMDDYYYY" set-if-empty="true" set-if-null="true"/>
            <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateDOBLongCtx"/>
        </if-compare>
            
            <!-- Create/Update LOYALTY POINT ID -->
        <set field="loyaltyPointStr" value="USER_LOYALTY_POINT_ID"/>
	    <call-object-method method-name="containsKey" obj-field="parameters" ret-field="hasLoyaltyPointInput">
	        <field field="loyaltyPointStr" type="Object"/>
	    </call-object-method>
	    <if-compare field="hasLoyaltyPointInput" operator="equals" value="true" type="Boolean">
            <set field="createUpdateLoyaltyPointCtx.partyId" from-field="parameters.partyId"/>
            <set field="createUpdateLoyaltyPointCtx.attrName" value="LOYALTY_POINT_ID"/>
            <set field="createUpdateLoyaltyPointCtx.attrValue" from-field="parameters.USER_LOYALTY_POINT_ID" set-if-empty="true" set-if-null="true"/>
            <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateLoyaltyPointCtx"/>
        </if-compare>

            <!-- Create/Update email preference -->
        <set field="emailPrefStr" value="PARTY_EMAIL_PREFERENCE"/>
	    <call-object-method method-name="containsKey" obj-field="parameters" ret-field="hasEmailPrefInput">
	        <field field="emailPrefStr" type="Object"/>
	    </call-object-method>
	    <if-compare field="hasEmailPrefInput" operator="equals" value="true" type="Boolean">
            <set field="createUpdateEmailPreferenceCtx.partyId" from-field="parameters.partyId"/>
            <set field="createUpdateEmailPreferenceCtx.attrName" value="PARTY_EMAIL_PREFERENCE"/>
            <set field="createUpdateEmailPreferenceCtx.attrValue" from-field="parameters.PARTY_EMAIL_PREFERENCE" set-if-empty="true" set-if-null="true"/>
            <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateEmailPreferenceCtx"/>
        </if-compare>
            
            <!-- Create/Update Text preference -->
        <set field="textPrefStr" value="PARTY_TEXT_PREFERENCE"/>
	    <call-object-method method-name="containsKey" obj-field="parameters" ret-field="hasTextPrefInput">
	        <field field="textPrefStr" type="Object"/>
	    </call-object-method>
	    <if-compare field="hasTextPrefInput" operator="equals" value="true" type="Boolean">
            <set field="createUpdateTextPreferenceCtx.partyId" from-field="parameters.partyId"/>
            <set field="createUpdateTextPreferenceCtx.attrName" value="PARTY_TEXT_PREFERENCE"/>
            <set field="createUpdateTextPreferenceCtx.attrValue" from-field="parameters.PARTY_TEXT_PREFERENCE" set-if-empty="true" set-if-null="true"/>
            <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateTextPreferenceCtx"/>
        </if-compare>

            <!-- Create IS_DOWNLOADED if not exist -->
            <entity-one entity-name="PartyAttribute" value-field="partyAttribute">
                <field-map field-name="partyId" from-field="parameters.partyId"/>
                <field-map field-name="attrName" value="IS_DOWNLOADED"/>
            </entity-one>
            <if-empty field="partyAttribute">
                <set field="createIsDownloadedCtx.partyId" from-field="parameters.partyId"/>
                <set field="createIsDownloadedCtx.attrName" value="IS_DOWNLOADED"/>
                <set field="createIsDownloadedCtx.attrValue" value="N"/>
                <call-service service-name="createUpdatePartyAttribute" in-map-name="createIsDownloadedCtx"/>
            </if-empty>
            
        <!-- Create/Update USER FACEBOOK_USER  -->
        <set field="facebookUser" value="FACEBOOK_USER"/>
	    <call-object-method method-name="containsKey" obj-field="parameters" ret-field="hasFacebookUserInput">
	        <field field="facebookUser" type="Object"/>
	    </call-object-method>
        <if-compare field="hasFacebookUserInput" operator="equals" value="true" type="Boolean">
            <set field="createUpdateFacebookUserCtx.partyId" from-field="parameters.partyId"/>
            <set field="createUpdateFacebookUserCtx.attrName" value="FACEBOOK_USER"/>
            <set field="createUpdateFacebookUserCtx.attrValue" from-field="parameters.FACEBOOK_USER" set-if-empty="true" set-if-null="true"/>
            <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateFacebookUserCtx"/>
        </if-compare>
        
        <!-- Create/Update USER FACEBOOK_ID  -->
        <set field="facebookId" value="FACEBOOK_ID"/>
	    <call-object-method method-name="containsKey" obj-field="parameters" ret-field="hasFacebookIdInput">
	        <field field="facebookId" type="Object"/>
	    </call-object-method>
        <if-compare field="hasFacebookIdInput" operator="equals" value="true" type="Boolean">
            <set field="createUpdateFacebookIdCtx.partyId" from-field="parameters.partyId"/>
            <set field="createUpdateFacebookIdCtx.attrName" value="FACEBOOK_ID"/>
            <set field="createUpdateFacebookIdCtx.attrValue" from-field="parameters.FACEBOOK_ID" set-if-empty="true" set-if-null="true"/>
            <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateFacebookIdCtx"/>
        </if-compare>
            
            <!-- Create/Update Party Custom Attribute -->
            <if-compare operator="equals" value="Y" field="parameters.USER_CUSTOM_ATTRIBUTE_ACTIVE">
            
                <set field="getPartyCustomAttributeListCtx" type="NewMap"/>
                <set field="getPartyCustomAttributeListCtx.useCache" value="true" type="String"/>
                <call-service service-name="getPartyCustomAttributeList" in-map-name="getPartyCustomAttributeListCtx">
                    <result-to-field result-name="customPartyAttributeList" field="customPartyAttributeList"/>
                </call-service>
                
	            <iterate entry="customPartyAttribute" list="customPartyAttributeList">
	                <set field ="attrValueStr" value="" />
	                <if>
                    <condition>
                        <or>
                            <if-compare value="CHECKBOX" operator="equals" field="customPartyAttribute.Type"></if-compare>
                            <if-compare value="DROP_DOWN_MULTI" operator="equals" field="customPartyAttribute.Type"></if-compare>
                        </or>
                    </condition>
                    <then>
                              <set field ="attrValueList" from-field="parameters.${customPartyAttribute.AttrName}" />
                              
		                            <iterate list="attrValueList" entry="attrValue">
								           <string-append string="${attrValue}," field="attrValueStr" /> 
						              </iterate>

						              <if-compare operator="contains" value="," field="attrValueList">
						              <if-not-empty field="attrValueStr">
								            <call-object-method obj-field="attrValueStr" method-name="length" ret-field="attrValueStrLength"/>
								            <calculate field="attrValueStrLength">
								                <calcop operator="subtract" >
								                    <calcop operator="get" field="attrValueStrLength"/>
								                    <number value="1"/>
								                </calcop>
								            </calculate>
								            <set field="startIndex" value="0" type="Integer"/>
								            <set field="endIndex" from-field="attrValueStrLength" type="Integer"/>
								            <call-object-method obj-field="attrValueStr" method-name="substring" ret-field="attrValueStr">
								                <field field="startIndex" type="int"/>
								                <field field="endIndex" type="int"/>
								            </call-object-method>
	                                  </if-not-empty>
	                                  <else>
	                                      <set field="attrValueStr" from-field="attrValueList" type="String"/>
	                                  </else>
	                                  </if-compare>
                    </then>
                    <else-if>
                        <condition> 
		                    <if-compare operator="equals" value="DATE_MMDD" field="customPartyAttribute.Type"/>
		                </condition>
                    <then>
                        <clear-field field="shortDateString"/>
                        <if-not-empty field="parameters.${customPartyAttribute.AttrName}_MM">
			                <if-not-empty field="parameters.${customPartyAttribute.AttrName}_DD">
			                    <set field="shortMonth" from-field="parameters.${customPartyAttribute.AttrName}_MM"/>
			                    <set field="shortDay" from-field="parameters.${customPartyAttribute.AttrName}_DD"/>
			                    <string-append string="${shortMonth}" field="shortDateString"/>
			                    <string-append string="/" field="shortDateString"/>
			                    <string-append string="${shortDay}" field="shortDateString"/>
			                </if-not-empty>
			            </if-not-empty>
			            <set field="attrValueStr" from-field="shortDateString" set-if-null="true"/>
                    </then>
                    </else-if>
                    <else-if>
                        <condition> 
		                    <if-compare operator="equals" value="DATE_MMDDYYYY" field="customPartyAttribute.Type"/>
		                </condition>
                    <then>
                        <clear-field field="dateString"/>
                        <if-not-empty field="parameters.${customPartyAttribute.AttrName}_MM">
			                <if-not-empty field="parameters.${customPartyAttribute.AttrName}_DD">
			                    <if-not-empty field="parameters.${customPartyAttribute.AttrName}_YYYY">
				                    <set field="month" from-field="parameters.${customPartyAttribute.AttrName}_MM"/>
				                    <set field="day" from-field="parameters.${customPartyAttribute.AttrName}_DD"/>
				                    <set field="year" from-field="parameters.${customPartyAttribute.AttrName}_YYYY"/>
				                    <string-append string="${month}" field="dateString"/>
				                    <string-append string="/" field="dateString"/>
				                    <string-append string="${day}" field="dateString"/>
				                    <string-append string="/" field="dateString"/>
				                    <string-append string="${year}" field="dateString"/>
				                </if-not-empty>
			                </if-not-empty>
			            </if-not-empty>
			            <set field="attrValueStr" from-field="dateString" set-if-null="true"/>
                    </then>
                    </else-if>
                    <else-if>
                        <condition> 
		                    <if-compare operator="equals" value="DATE_DDMM" field="customPartyAttribute.Type"/>
		                </condition>
                    <then>
                        <clear-field field="shortDateString"/>
                        <if-not-empty field="parameters.${customPartyAttribute.AttrName}_DD">
			                <if-not-empty field="parameters.${customPartyAttribute.AttrName}_MM">
			                    <set field="shortDay" from-field="parameters.${customPartyAttribute.AttrName}_DD"/>
			                    <set field="shortMonth" from-field="parameters.${customPartyAttribute.AttrName}_MM"/>
			                    <string-append string="${shortDay}" field="shortDateString"/>
			                    <string-append string="/" field="shortDateString"/>
			                    <string-append string="${shortMonth}" field="shortDateString"/>
			                </if-not-empty>
			            </if-not-empty>
			            <set field="attrValueStr" from-field="shortDateString" set-if-null="true"/>
                    </then>
                    </else-if>
                    <else-if>
                        <condition> 
		                    <if-compare operator="equals" value="DATE_DDMMYYYY" field="customPartyAttribute.Type"/>
		                </condition>
                    <then>
                        <clear-field field="dateString"/>
                        <if-not-empty field="parameters.${customPartyAttribute.AttrName}_DD">
			                <if-not-empty field="parameters.${customPartyAttribute.AttrName}_MM">
			                    <if-not-empty field="parameters.${customPartyAttribute.AttrName}_YYYY">
			                        <set field="day" from-field="parameters.${customPartyAttribute.AttrName}_DD"/>
				                    <set field="month" from-field="parameters.${customPartyAttribute.AttrName}_MM"/>
				                    <set field="year" from-field="parameters.${customPartyAttribute.AttrName}_YYYY"/>
				                    <string-append string="${day}" field="dateString"/>
				                    <string-append string="/" field="dateString"/>
				                    <string-append string="${month}" field="dateString"/>
				                    <string-append string="/" field="dateString"/>
				                    <string-append string="${year}" field="dateString"/>
				                </if-not-empty>
			                </if-not-empty>
			            </if-not-empty>
			            <set field="attrValueStr" from-field="dateString" set-if-null="true"/>
                    </then>
                    </else-if>
                    <else>
                        <set field="attrValueStr" from-field="parameters.${customPartyAttribute.AttrName}"/>
                    </else>
                    </if>
	                    
                        <set field="createUpdateCustomPartyAttributeCtx.partyId" from-field="parameters.partyId"/>
                        <set field="createUpdateCustomPartyAttributeCtx.attrName" value="${customPartyAttribute.AttrName}"/>
                        <set field="createUpdateCustomPartyAttributeCtx.attrValue" from-field="attrValueStr" set-if-null="true"/>
                        <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateCustomPartyAttributeCtx"/>
                        <clear-field field="createUpdateCustomPartyAttributeCtx"/>
	            </iterate>
            </if-compare>
     </simple-method>
     <simple-method method-name="UserLoginUpdatedMessage" short-description="UserLogin Updated Success message">
        <property-to-field field="tempSuccessMessage" resource="OSafeUiLabels" property="UserLoginUpdatedSuccess"/>
        <string-to-list string="${tempSuccessMessage}"  list="success_list"/>
        <field-to-request field="success_list" request-name="osafeSuccessMessageList" />
    </simple-method>
     
</simple-methods>
