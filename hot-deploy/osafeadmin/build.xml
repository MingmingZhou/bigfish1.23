<?xml version="1.0" encoding="UTF-8"?>

<project name="OFBiz - OSafe Component" default="osafeadmin-deployment" basedir=".">
    <import file="../../common.xml"/>

    <!-- ================================================================== -->
    <!-- Initialization of all property settings                            -->
    <!-- ================================================================== -->

    <property environment="env"/>
    <property name="desc" value="OSafe Admin Component"/>
    <property name="name" value="ofbiz-osafe-admin"/>
    <property name="component-name" value="ofbiz-osafe-admin"/>
    <property name="ofbiz.home.dir" value="../.."/>
    <property name="src.dir" value="src"/>
    <property name="dtd.dir" value="dtd"/>
    <property name="lib.dir" value="lib"/>
    <property name="build.dir" value="build"/>

    <path id="local.class.path">
        <fileset dir="${lib.dir}" includes="*.jar"/>
        <fileset dir="../../framework/base/lib" includes="*.jar"/>
        <fileset dir="../../framework/base/lib/j2eespecs" includes="*.jar"/>
        <fileset dir="../../framework/base/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/common/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/datafile/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/entity/lib" includes="*.jar"/>
        <fileset dir="../../framework/entity/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/security/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/service/lib" includes="*.jar"/>
        <fileset dir="../../framework/service/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/minilang/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/widget/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/webapp/lib" includes="*.jar"/>
        <fileset dir="../../framework/webapp/build/lib" includes="*.jar"/>
        <fileset dir="../../framework/base/lib/commons" includes="*.jar"/>
        <fileset dir="../../applications/product/build/lib" includes="*.jar"/>
        <fileset dir="../../applications/order/build/lib" includes="*.jar"/>
        <fileset dir="../../applications/party/build/lib" includes="*.jar"/>
        <fileset dir="../../applications/accounting/build/lib" includes="*.jar"/>
        
    </path>
	<!-- ================================================================== -->
    <!-- Minifies all JS and CSS files                            -->
    <!-- ================================================================== -->
    <target name="run-bigfish-compression">
        <yuicompressor inFile="../../themes/osafe_admin_theme/webapp/osafe_admin_theme/css/admin/admin.css" outFile="../../themes/osafe_admin_theme/webapp/osafe_admin_theme/css/admin/admin.css"/>
        <yuicompressor inFile="../../themes/osafe_admin_theme/webapp/osafe_admin_theme/css/admin/admin_gunmetal.css" outFile="../../themes/osafe_admin_theme/webapp/osafe_admin_theme/css/admin/admin_gunmetal.css"/>
    </target>
    
    <macrodef name="yuicompressor" description="Runs the YUI JS/CSS compressor on the specified inFile and saves the output to outFile">
      <attribute name="inFile"/>
      <attribute name="outFile"/>
      <sequential>
        <echo message="Minify @{inFile}"/>
          <java jar="${ofbiz.home.dir}/hot-deploy/osafe/lib/yuicompressor-2.4.2.jar" fork="true">
            <arg value="-o"/>
            <arg value="@{outFile}"/>
            <arg value="@{inFile}"/>
        </java>
       </sequential>
     </macrodef>
    <!-- ================================================================= -->
    <!-- Osafe Admin Deployment                                                  -->
    <!-- ================================================================= -->

    <target name="osafeadmin-deployment" depends="generate-sources" description="Deploy client specific OSafe files">
        <echo message="[osafeadmin-deployment] ========== Start Deploying OSafe Admin Files (Deploy) =========="/>

        <property name="osafe.deployemt.home" value="../../osafe_deployment"></property>

        <!-- Load client specific property values -->
        <property file="${osafe.deployemt.home}/client-deployment.properties"></property>

        <!-- Osafe Admin web.xml -->
        <copy file="${osafe.deployemt.home}/ofbiz/hot-deploy/osafeadmin/webapp/osafeadmin/WEB-INF/web.xml.template" tofile="${osafe.deployemt.home}/ofbiz/hot-deploy/osafeadmin/webapp/osafeadmin/WEB-INF/web.xml">
            <filterset >
              <filter token="store.webSiteId" value="${store.webSiteId}"/>
              <filter token="adminModuleName" value="${adminModuleName}"/>
              <filter token="eCommerceDecoratorName" value="${eCommerceDecoratorName}"/>
            </filterset>
        </copy>
        <move file="${osafe.deployemt.home}/ofbiz/hot-deploy/osafeadmin/webapp/osafeadmin/WEB-INF/web.xml" todir="../../hot-deploy/osafeadmin/webapp/osafeadmin/WEB-INF" overwrite="true" failonerror="false"/>

        <!-- Call original default target -->
        <antcall target="jar"></antcall>

        <echo message="[osafeadmin-deployment] ========== Done Deploying OSafeadmin Files (Deploy) =========="/>
    </target>

    <!-- ================================================================= -->
    <!-- Targets to create  patch files                                    -->
    <!-- ================================================================= -->

    <target name="create-ofbiz-patches" description="Creates patch for framework, application, specialpurpose components">
        <exec executable="svn" output="patches/framework.patch" dir="${ofbiz.home.dir}">
            <arg value="diff"/>
            <arg value="framework"/>
        </exec>
        <exec executable="svn" output="patches/applications.patch" dir="${ofbiz.home.dir}">
            <arg value="diff"/>
            <arg value="applications"/>
        </exec>
        <exec executable="svn" output="patches/specialpurpose.patch" dir="${ofbiz.home.dir}">
            <arg value="diff"/>
            <arg value="specialpurpose"/>
        </exec>
    </target>

    <target name="revert-ofbiz-patches" description="Remove any local change in the files or any previously applied local patch.">
        <exec executable="svn" dir="${ofbiz.home.dir}">
            <arg value="revert"/>
            <arg value="-R"/>
            <arg value="framework"/>
        </exec>
        <exec executable="svn" dir="${ofbiz.home.dir}">
            <arg value="revert"/>
            <arg value="-R"/>
            <arg value="applications"/>
        </exec>
        <exec executable="svn" dir="${ofbiz.home.dir}">
            <arg value="revert"/>
            <arg value="-R"/>
            <arg value="specialpurpose"/>
        </exec>
    </target>

    <target name="apply-ofbiz-patches" description="Apply the patch to framework, application, specialpurpose components.">
        <fail message="Patch files not found.">
            <condition>
                <or>
                    <not><isset property="component-name"/></not>
                    <not>
                        <resourcecount count="3">
                            <fileset dir="patches" includes="*.patch"/>
                        </resourcecount>
                    </not>
                </or>
            </condition>
        </fail>
        <patch strip="0" patchfile="patches/framework.patch" dir="${ofbiz.home.dir}"/>
        <patch strip="0" patchfile="patches/applications.patch" dir="${ofbiz.home.dir}"/>
        <patch strip="0" patchfile="patches/specialpurpose.patch" dir="${ofbiz.home.dir}"/>
    </target>

    <target name="reapply-ofbiz-patches" description="First removes any previously applied patch and then applies the new patch">
        <fail message="Patch files not found.">
            <condition>
                <or>
                    <not><isset property="component-name"/></not>
                    <not>
                        <resourcecount count="3">
                            <fileset dir="patches" includes="*.patch"/>
                        </resourcecount>
                    </not>
                </or>
            </condition>
        </fail>
        <antcall target="revert-ofbiz-patches"/>
        <antcall target="apply-ofbiz-patches"/>
    </target>

	<target name="generate-sources">
		<echo message="[generate-sources] ========== Start Deploying XSD File (Deploy) =========="/>
		<taskdef name="xjc" classname="org.jvnet.jaxb2_commons.xjc.XJC2Task">
		    <!-- XJC2 Task classpath -->
		    <classpath>
				<fileset dir="../../hot-deploy/osafeadmin/lib/jaxb">
					<include name="jaxb-impl-*.jar"/>
					<include name="jaxb2-basics-jaxb-xjc-*.jar"/>
					<include name="jaxb-xjc-*.jar"/>
					<include name="jaxb2-basics-ant-*.jar"/>
				</fileset>
			</classpath>
		</taskdef>
		<delete dir="../../hot-deploy/osafeadmin/build" includeemptydirs="true" failonerror="false"/>

		<mkdir dir="../../hot-deploy/osafeadmin/src"/>
		
		<xjc destdir="../../hot-deploy/osafeadmin/src" extension="true">
		   
			<binding dir="../../hot-deploy/osafeadmin/dtd/feeds">
				<include name="**/*.xjb"/>
			</binding>
			<schema dir="../../hot-deploy/osafeadmin/dtd/feeds">
				<include name="**/*.xsd"/>
			</schema>
			<classpath>
				<fileset dir="../../hot-deploy/osafeadmin/lib/jaxb">
				    <!-- JAXB2 Basics library -->
					<include name="jaxb2-basics-*.jar"/>
					<!-- JAXB2 Basics library dependencies -->
					<include name="jaxb2-basics-runtime-*.jar"/>
					<include name="jaxb2-basics-tools-*.jar"/>
					<include name="commons-beanutils-*.jar"/>
					<include name="commons-lang-*.jar"/>
					<include name="commons-logging-*.jar"/>
				</fileset>
			</classpath>
				<!-- Plugins -->
		</xjc>
		<echo message="[generate-sources] ========== End Deploying XSD File (Deploy) =========="/>
		</target>
</project>