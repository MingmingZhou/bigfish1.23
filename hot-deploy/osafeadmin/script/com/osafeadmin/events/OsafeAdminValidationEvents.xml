<?xml version="1.0" encoding="UTF-8"?>

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">

    <simple-method method-name="generateSuccessMessage" short-description="Generate Success Messages">
        <set from-field="requestAttributes.errorMessageList" field="errorMessages"/>
          <property-to-field resource="OSafeAdminUiLabels" property="UpdatedSuccess" field="tempSuccessMessage"/>
          <string-to-list string="${tempSuccessMessage}"  list="success_list"/>
          <field-to-request field="success_list" request-name="successMessageList" />
          <field-to-result field="success_list" result-name="successMessageList"/>
    </simple-method>
    
    <simple-method method-name="validateWebsiteLogin" short-description="Validate the website login">
    	<if>
          <condition>
              <or>
              	<not>
              		<if-empty field="parameters.loginEmail"/>
              	</not>
              	<not>
              		<if-empty field="parameters.loginEmailConfirm"/>
              	</not>
              	<not>
              		<if-empty field="parameters.password"/>
              	</not>
              	<not>
              		<if-empty field="parameters.passwordConfirm"/>
              	</not>
              </or>
          </condition>
          <then>
          	  <!-- If any of these fields are empty then display error -->
              <if>
		          <condition>
		              <or>
		              	<if-empty field="parameters.loginEmail"/>
		              	<if-empty field="parameters.loginEmailConfirm"/>
		              	<if-empty field="parameters.password"/>
		              	<if-empty field="parameters.passwordConfirm"/>
		              </or>
		          </condition>
		          <then>
		            <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="WebsiteLoginCreationError"/>
                	<string-to-list string="${tempErrorMessage}" message-field="loginEmail" list="error_list"/>
		          </then>
		      </if>
              
                <!-- validate the website login -->
		        <if-empty field="parameters.loginEmail">
		            <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="LoginEmailAddressMissingError"/>
		            <string-to-list string="${tempErrorMessage}" message-field="loginEmail" list="error_list"/>
		        <else>
		            <call-class-method class-name="org.ofbiz.base.util.UtilValidate"  method-name="isEmail" ret-field="isEmail">
		                <field field="parameters.loginEmail"/>
		            </call-class-method>
		            <if-compare field="isEmail" operator="equals" value="false">
		                <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="LoginEmailAddressNotFormattedCorrectlyError"/>
		                <string-to-list string="${tempErrorMessage}" message-field="loginEmail" list="error_list"/>
		            <else>
		                <call-object-method obj-field="parameters.loginEmail" method-name="toLowerCase" ret-field="loginEmailLowerCase"/>
		                <entity-one entity-name="UserLogin" value-field="existingUserLogin">
		                    <field-map field-name="userLoginId" from-field="loginEmailLowerCase"/>
		                </entity-one>
		                <if-not-empty field="existingUserLogin">
					        <set field="partyMap.partyId" from-field="existingUserLogin.partyId" />
					        <find-by-primary-key entity-name="Party" map="partyMap" value-field="existingUserLoginParty"/>
					        <call-class-method class-name="org.ofbiz.party.party.PartyHelper" method-name="getPartyName" ret-field="userLoginName">
					            <field field="existingUserLoginParty" type="org.ofbiz.entity.GenericValue"/>
					        </call-class-method>
			                <set field="argListNames[]" from-field="parameters.loginEmail"/>
			                <set field="argListNames[]" from-field="existingUserLogin.partyId"/>
		                    <set field="argListNames[]" from-field="userLoginName"/>
		                    <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="LoginEmailAlreadyExistError" arg-list-name="argListNames"/>
		                    <string-to-list string="${tempErrorMessage}" message-field="loginEmail" list="error_list"/>
		                <else>
		                    <if-compare-field operator="not-equals" field="parameters.loginEmail" to-field="parameters.loginEmailConfirm">
				                <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="LoginEmailMatchError"/>
				                <string-to-list string="${tempErrorMessage}" message-field="loginEmail" list="error_list"/>
		                    </if-compare-field>
		                </else>
		                </if-not-empty>
		            </else>
		            </if-compare>
		        </else>
		        </if-empty>
		
		        <!-- validate the website login password-->
		        <if-empty field="parameters.password">
		            <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="LoginPasswordMissingError"/>
		            <string-to-list string="${tempErrorMessage}" message-field="password" list="error_list"/>
		        <else>
			        <!-- Check Password Strength -->
			        <call-class-method class-name="com.osafe.util.OsafeAdminUtil" method-name="getProductStoreParm" ret-field="pwdLenStr">
			            <field field="parameters.productStoreId" type="String"/>
			            <string value="REG_PWD_MIN_CHAR"/>
			        </call-class-method>
			        <call-class-method class-name="com.osafe.util.OsafeAdminUtil" method-name="getProductStoreParm" ret-field="minDigitStr">
			            <field field="parameters.productStoreId" type="String"/>
			            <string value="REG_PWD_MIN_NUM"/>
			        </call-class-method>
			        <call-class-method class-name="com.osafe.util.OsafeAdminUtil" method-name="getProductStoreParm" ret-field="minUpCaseStr">
			            <field field="parameters.productStoreId" type="String"/>
			            <string value="REG_PWD_MIN_UPPER"/>
			        </call-class-method>
			        <call-class-method class-name="com.osafe.util.OsafeAdminUtil" method-name="passPattern" ret-field="isValidPass">
			            <field field="parameters.password" type="String"/>
		                <field field="pwdLenStr" type="String"/>
		                <field field="minDigitStr" type="String"/>
		                <field field="minUpCaseStr" type="String"/>
			        </call-class-method>
			        <if-compare field="isValidPass" operator="not-equals" value="success">
			             <set field="tempErrorMessage" from-field="isValidPass"/>
			             <string-to-list string="${tempErrorMessage}" message-field="password" list="error_list"/>
			        <else>
		                <if-compare-field operator="not-equals" field="parameters.password" to-field="parameters.passwordConfirm">
		                    <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="LoginPasswordMatchError"/>
		                    <string-to-list string="${tempErrorMessage}" message-field="password" list="error_list"/>
		                </if-compare-field>
			        </else>
			        </if-compare>
		        </else>
		        </if-empty>
          </then>
        </if>
    	
    </simple-method>
    <simple-method method-name="validateSequenceNumber" short-description="Validate a Sequence Number">
        <if-not-empty field="sequenceNumValue">
            <call-class-method class-name="org.ofbiz.base.util.UtilValidate" method-name="isInteger" ret-field="sequenceNumValid">
                    <string value="${sequenceNumValue}"></string>
            </call-class-method>
            <if-compare operator="equals" value="false" field="sequenceNumValid" type="Boolean">
                <set field="invalidSeqNum" value="true"/>
            <else>
                <if-empty field="sequenceValueGreaterThan">
                      <set field="sequenceValueGreaterThan" value="1"/>
                </if-empty>
                <if-empty field="sequenceValueLessThan">
                      <set field="sequenceValueLessThan" value="1000"/>
                </if-empty>
                <if>
                    <condition>
                        <and>
                            <if-compare-field to-field="sequenceValueGreaterThan" operator="greater-equals" field="sequenceNumValue" type="Long"/>
                            <if-compare-field to-field="sequenceValueLessThan" operator="less-equals" field="sequenceNumValue" type="Long"/>
                        </and>
                    </condition>
                    <then>
                    </then>
                    <else>
                        <set field="invalidSeqNumRange" value="true"/>
                    </else>
                </if>
            </else>
            </if-compare>
        <else>
            <set field="invalidSeqNum" value="true"/>
        </else>
        </if-not-empty>
    </simple-method>
    
    <simple-method method-name="validateProductAttributes" short-description="validate specific product attributes">
    	<!-- this method takes: productId, attrName, attrValue, productAttributMap -->
    	<if-not-empty field="attrName"> 
    		<if-not-empty field="attrValue">
    			
    			<if-compare operator="equals" value="BF_INVENTORY_TOT" field="attrName" type="String">
		    		<set field="bfTotalInventory" from-field="attrValue"/>
			    	<if-not-empty field="bfTotalInventory"> 
			            <call-class-method class-name="org.ofbiz.base.util.UtilValidate" method-name="isSignedInteger" ret-field="bfTotalInventoryVaild">
			               <string value="${bfTotalInventory}"></string>
			            </call-class-method>
			            <if-compare operator="equals" value="false" field="bfTotalInventoryVaild" type="Boolean">
			                <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="ValidBFTotalInventoryError"/>
			                <string-to-list string="${tempErrorMessage}" message-field="bfTotalInventory" list="error_list"/>
			            <else>
			                <if>
			                    <condition>
			                    <and>
			                        <if-compare operator="greater-equals" value="-9999" field="bfTotalInventory" type="Long"/>
			                        <if-compare operator="less-equals" value="99999" field="bfTotalInventory" type="Long"/>
			                    </and>
			                    </condition>
			                <then>
			                </then>
			                <else>
			                    <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="ValidBFTotalInventoryError"/>
			                    <string-to-list string="${tempErrorMessage}" message-field="bfTotalInventory" list="error_list"/>
			                </else>
			                </if>
			            </else>
			            </if-compare>
			        </if-not-empty>
		        </if-compare>
    			
		    	<if-compare operator="equals" value="BF_INVENTORY_WHS" field="attrName" type="String">
		    		<set field="bfWHInventory" from-field="attrValue"/>
			    	<if-not-empty field="bfWHInventory"> 
			            <call-class-method class-name="org.ofbiz.base.util.UtilValidate" method-name="isSignedInteger" ret-field="bfWHInventoryVaild">
			               <string value="${bfWHInventory}"></string>
			            </call-class-method>
			            <if-compare operator="equals" value="false" field="bfWHInventoryVaild" type="Boolean">
			                <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="ValidBFWHInventoryError"/>
			                <string-to-list string="${tempErrorMessage}" message-field="bfWHInventory" list="error_list"/>
			            <else>
			                <if>
			                    <condition>
			                    <and>
			                        <if-compare operator="greater-equals" value="-9999" field="bfWHInventory" type="Long"/>
			                        <if-compare operator="less-equals" value="99999" field="bfWHInventory" type="Long"/>
			                    </and>
			                    </condition>
			                <then>
			                </then>
			                <else>
			                    <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="ValidBFWHInventoryError"/>
			                    <string-to-list string="${tempErrorMessage}" message-field="bfWHInventory" list="error_list"/>
			                </else>
			                </if>
			            </else>
			            </if-compare>
			        </if-not-empty>
		        </if-compare>
		        
		        
		        
		        <if>
		        	<condition>
		        		<or>
		        			<!-- <if-compare operator="equals" value="PDP_QTY_MAX" field="attrName" type="String"/> -->
		        			<if-compare operator="equals" value="PDP_QTY_MIN" field="attrName" type="String"/>
		        			<!-- <if-compare operator="equals" value="PDP_QTY_DEFAULT" field="attrName" type="String"/> -->
		        		</or>
		        	</condition>
		        	<then>
		        		<set field="pdpQuantityMin" from-field="productAttributMap.PDP_QTY_MIN"/>
		        		<set field="pdpQuantityMax" from-field="productAttributMap.PDP_QTY_MAX"/>
		        		<set field="pdpQuantityDefault" from-field="productAttributMap.PDP_QTY_DEFAULT"/>
		        		
		        		<set field="pdpQuantityMinMaxSetCount" value="0" type="Integer"/>
				        <if-not-empty field="pdpQuantityMin">
				        	<call-class-method class-name="com.osafe.util.OsafeAdminUtil" method-name="isNumber" ret-field="isNumber">
					            <field field="pdpQuantityMin"/>
					        </call-class-method>
					        <if-compare field="isNumber" operator="equals" value="false">
					            <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="ValidPdpQtyMinError"/>
					            <string-to-list string="${tempErrorMessage}" message-field="pdpQuantityMin" list="error_list"/>
						        <else>
						        	<if-compare field="pdpQuantityMin" operator="greater" value="0" type="Long">
						        		<set field="pdpQuantityMinSet" value="Y"/>
						        		<calculate field="pdpQuantityMinMaxSetCount">
						        			<calcop operator="add" >
						        				<calcop operator="get" field="pdpQuantityMinMaxSetCount"/>
				               					<number value="1"/>
						        			</calcop>
						        		</calculate>
						        		<else>
						        			<property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="PdpQtyMinGreaterThanZeroError"/>
					            			<string-to-list string="${tempErrorMessage}" message-field="pdpQuantityMin" list="error_list"/>
						        		</else>
						        	</if-compare>
						        </else>
					        </if-compare>
				        </if-not-empty>
				        
				        <if-not-empty field="pdpQuantityMax">
				        	<call-class-method class-name="com.osafe.util.OsafeAdminUtil" method-name="isNumber" ret-field="isNumber">
					            <field field="pdpQuantityMax"/>
					        </call-class-method>
					        <if-compare field="isNumber" operator="equals" value="false">
					            <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="ValidPdpQtyMaxError"/>
					            <string-to-list string="${tempErrorMessage}" message-field="pdpQuantityMax" list="error_list"/>
					            <else>
					            	<calculate field="pdpQuantityMinMaxSetCount">
					        			<calcop operator="add" >
					        				<calcop operator="get" field="pdpQuantityMinMaxSetCount"/>
				              				<number value="1"/>
					        			</calcop>
					        		</calculate>
					            </else>
					        </if-compare>
				        </if-not-empty>
				        
				        <if-compare field="pdpQuantityMinMaxSetCount" operator="greater" value="0" type="Integer">
				        	<if-compare field="pdpQuantityMinMaxSetCount" operator="equals" value="1" type="Integer">
				        		<!-- if only one is entered -->
				        		<property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="BothSetPdpQtyMinMaxError"/>
					            <string-to-list string="${tempErrorMessage}" message-field="pdpQuantityMax" list="error_list"/>
					            <else>
					            	<if-compare field="pdpQuantityMinMaxSetCount" operator="equals" value="2" type="Integer">
					            		<!-- if both are entered -->
					            		<if-compare-field field="pdpQuantityMax" operator="greater-equals" to-field="pdpQuantityMin" type="Integer">
					            			<!-- both min and max are set and they both passed validation pdpQuantityMinMaxSetCount = 3 -->
							            	<calculate field="pdpQuantityMinMaxSetCount">
							        			<calcop operator="add" >
							        				<calcop operator="get" field="pdpQuantityMinMaxSetCount"/>
						              				<number value="1"/>
							        			</calcop>
							        		</calculate>
					            			<else>
					            				<property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="PdpQtyMaxNotGreaterThanMinError"/>
					           					 <string-to-list string="${tempErrorMessage}" message-field="pdpQuantityMax" list="error_list"/>
					            			</else>
				        				</if-compare-field>
					            	</if-compare>
					            </else>
				        	</if-compare>
						</if-compare>
						
						<if-not-empty field="pdpQuantityDefault">
							<call-class-method class-name="com.osafe.util.OsafeAdminUtil" method-name="isNumber" ret-field="isNumber">
					            <field field="pdpQuantityDefault"/>
					        </call-class-method>
					        <if-compare field="isNumber" operator="equals"  value="false">
					            <property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="ValidPdpQtyDefaultError"/>
					            <string-to-list string="${tempErrorMessage}" message-field="pdpQuantityDefault" list="error_list"/>
					            <else>
					            	<if-compare field="pdpQuantityMinMaxSetCount" operator="equals" value="3" type="Integer">
					            		<if-compare-field field="pdpQuantityDefault" operator="greater"  to-field="pdpQuantityMax" type="Integer">
					            			<property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="PdpQtyDefaultWithinMinMaxError"/>
					           				<string-to-list string="${tempErrorMessage}" message-field="pdpQuantityDefault" list="error_list"/>
					           				<else>
					           					<if-compare-field field="pdpQuantityDefault" operator="less" to-field="pdpQuantityMin" type="Integer">
					           						<property-to-field field="tempErrorMessage" resource="OSafeAdminUiLabels" property="PdpQtyDefaultWithinMinMaxError"/>
					           						<string-to-list string="${tempErrorMessage}" message-field="pdpQuantityDefault" list="error_list"/>
					           					</if-compare-field>
					           				</else>
					            		</if-compare-field>
					            	</if-compare>
					            </else>
					        </if-compare>
						</if-not-empty>
					
		        	</then>
		        </if>
		        
	        </if-not-empty>
        </if-not-empty>
        
    </simple-method>
    
</simple-methods>